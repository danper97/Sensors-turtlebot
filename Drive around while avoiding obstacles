%% Drive while avoiding obstacles

%Subscribers and publisher

rosshutdown
rosinit('localhost')
robot = rospublisher('cmd_vel');
laser = rossubscriber('scan');
colorImgSub = rossubscriber('/camera/rgb/image_raw', 'BufferSize', 5);
handles.colorImgSub = receive(colorImgSub,3);   %Camera
velmsg = rosmessage(robot);

% Drive 

  while (1)
      % Collect information from laser scan
      distanceThreshold = 0.6;
      scan = receive(laser,3);
      data = readCartesian(scan);
      x = data(end,1);
      y = data(end,2);
      % Compute distance of the closest obstacle
      dist = sqrt(x.^2 + y.^2);
      minDist = min(dist);     
      % Command robot action
      if minDist < distanceThreshold
          % If close to obstacle, back up slightly and spin
          forwardVelocity = -.1;
          spinVelocity=1.6;
      else
          % Continue on forward path
          forwardVelocity = .12;
          spinVelocity = 0;
      end
      velmsg.Linear.X = forwardVelocity;
      velmsg.Angular.Z = spinVelocity;
      send(robot,velmsg);
  end
